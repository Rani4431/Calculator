{"ast":null,"code":"var _jsxFileName = \"/Users/ranireddy/Documents/calculator/src/Calculator/Calculator.js\";\nimport React, { Component } from 'react';\nimport './Calculator.css';\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.calculate = () => {\n      if (this.state.equation.includes(\"=\")) {\n        let val = `${this.state.display} = ${this.state.display}`;\n        this.setState({\n          equation: val\n        });\n      } else if (this.state.equation != \"\" && this.state.equation.match(/[+\\-*\\/]/) != null && this.state.equation.match(/[+\\-*\\/]$/) == null) {\n        let result = Number.isInteger(eval(this.state.equation)) ? eval(this.state.equation) : parseFloat(eval(this.state.equation).toFixed(5));\n        let val = this.state.equation;\n        val += ` = ${result}`;\n        this.setState({\n          display: result,\n          equation: val\n        });\n      }\n    };\n\n    this.numInput = e => {\n      if (this.state.equation.match(/[0-9\\.]$/) && !this.state.equation.includes(\"=\")) {\n        if (this.state.equation.match(/[+\\-*\\/]/) == null) {\n          let val = this.state.equation + e.currentTarget.value;\n          this.setState({\n            display: val,\n            equation: val\n          });\n        } else {\n          this.setState({\n            display: this.state.display + e.currentTarget.value,\n            equation: this.state.equation + e.currentTarget.value\n          });\n        }\n      } else if (this.state.equation.match(/[+\\-*\\/]$/)) {\n        let val = this.state.equation + e.currentTarget.value;\n        this.setState({\n          display: e.currentTarget.value,\n          equation: val\n        });\n      } else if (this.state.display === \"0\" && e.currentTarget.value !== \"0\" || this.state.equation.includes(\"=\")) {\n        this.setState({\n          display: e.currentTarget.value,\n          equation: e.currentTarget.value\n        });\n      }\n    };\n\n    this.operInput = e => {\n      if (this.state.equation.includes(\"=\")) {\n        let val = this.state.display;\n        val += e.currentTarget.value;\n        this.setState({\n          equation: val\n        });\n      } else {\n        if (this.state.equation != \"\" && this.state.equation.match(/[*\\-\\/+]$/) == null) {\n          let val = this.state.equation;\n          val += e.currentTarget.value;\n          this.setState({\n            equation: val\n          });\n        } else if (this.state.equation.match(/[*\\-\\/+]$/) != null) {\n          let val = this.state.equation;\n          val = val.substring(0, val.length - 1);\n          val += e.currentTarget.value;\n          this.setState({\n            equation: val\n          });\n        }\n      }\n    };\n\n    this.decInput = e => {\n      if (this.state.equation == \"\" || this.state.equation.includes(\"=\")) {\n        let val = '0.';\n        this.setState({\n          display: val,\n          equation: val\n        });\n      } else if (this.state.equation.match(/[+\\-*\\/]$/)) {\n        let val = '0.';\n        this.setState({\n          display: val,\n          equation: this.state.equation + val\n        });\n      } else if (!this.state.display.includes(\".\")) {\n        this.setState({\n          display: this.state.display + e.currentTarget.value,\n          equation: this.state.equation + e.currentTarget.value\n        });\n      }\n    };\n\n    this.clear = () => {\n      this.setState({\n        display: \"0\",\n        equation: \"\"\n      });\n    };\n\n    this.convertToIndianFormat = number => {\n      number = Number(number);\n\n      if (number) {\n        number = number.toString();\n        var lastThree = number.substring(number.length - 3);\n        var otherNumbers = number.substring(0, number.length - 3);\n        if (otherNumbers !== '') lastThree = ',' + lastThree;\n        var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n        return res;\n      } else {\n        return number;\n      }\n    };\n\n    this.state = {\n      display: 1024,\n      equation: '256 x 4'\n    }; //     this.numInput = this.numInput.bind(this);\n    // this.operInput = this.operInput.bind(this);\n    // this.decInput = this.decInput.bind(this);\n    // this.clear = this.clear.bind(this);\n    // this.calculate = this.calculate.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"operatevalues\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", this.state.equation), React.createElement(\"div\", {\n      className: \"resultscreens\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.convertToIndianFormat(this.state.display)), React.createElement(\"div\", {\n      className: \"buttongroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      value: \"C\",\n      onClick: () => this.clear(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"C\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"+/-\",\n      onClick: () => this.operInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"+/-\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"%\",\n      onClick: () => this.operInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"%\"), React.createElement(\"button\", {\n      className: \"button operators\",\n      value: \"/\",\n      onClick: () => this.operInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"\\xF7\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"7\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"8\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"9\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"button\", {\n      className: \"button operators\",\n      value: \"*\",\n      onClick: () => this.operInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"\\xD7\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"4\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"5\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"6\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"button\", {\n      className: \"button operators\",\n      value: \"-\",\n      onClick: () => this.operInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"-\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"1\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"2\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"3\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"button\", {\n      className: \"button operators\",\n      value: \"+\",\n      onClick: () => this.operInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \"0\",\n      onClick: () => this.numInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"0\"), React.createElement(\"button\", {\n      className: \"button\",\n      value: \".\",\n      onClick: () => this.decInput(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \".\"), React.createElement(\"button\", {\n      className: \"button equalicon\",\n      value: \"=\",\n      onClick: () => this.calculate(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"=\"))));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/ranireddy/Documents/calculator/src/Calculator/Calculator.js"],"names":["React","Component","Calculator","constructor","props","calculate","state","equation","includes","val","display","setState","match","result","Number","isInteger","eval","parseFloat","toFixed","numInput","e","currentTarget","value","operInput","substring","length","decInput","clear","convertToIndianFormat","number","toString","lastThree","otherNumbers","res","replace","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Calculator.css'\n\nclass Calculator extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            display: 1024,\n                equation: '256 x 4',\n        \n              }\n    //     this.numInput = this.numInput.bind(this);\n    // this.operInput = this.operInput.bind(this);\n    // this.decInput = this.decInput.bind(this);\n    // this.clear = this.clear.bind(this);\n    // this.calculate = this.calculate.bind(this);\n    }\n \n\n      calculate=()=>{\n        if(this.state.equation.includes(\"=\")){\n          let val = `${this.state.display} = ${this.state.display}`;\n          this.setState({\n            equation: val\n          });\n        } else if(this.state.equation != \"\" && this.state.equation.match(/[+\\-*\\/]/) != null && this.state.equation.match(/[+\\-*\\/]$/) == null) {\n          let result = Number.isInteger(eval(this.state.equation)) ? eval(this.state.equation) : parseFloat(eval(this.state.equation).toFixed(5));\n          let val = this.state.equation;\n          val += ` = ${result}`;\n          this.setState({\n            display: result,\n            equation: val\n          });\n        }\n      }\n\n      numInput=(e)=>{\n        if(this.state.equation.match(/[0-9\\.]$/) && !this.state.equation.includes(\"=\")){\n          if(this.state.equation.match(/[+\\-*\\/]/) == null){\n            let val = this.state.equation + e.currentTarget.value;\n            this.setState({\n              display: val,\n              equation: val\n            });\n          } else {\n            this.setState({\n              display: this.state.display + e.currentTarget.value,\n              equation: this.state.equation + e.currentTarget.value\n            });\n          }\n        } else if(this.state.equation.match(/[+\\-*\\/]$/)){\n          let val = this.state.equation + e.currentTarget.value;\n          this.setState({\n            display: e.currentTarget.value,\n            equation: val\n          });\n        } else if(this.state.display === \"0\" && e.currentTarget.value !== \"0\" || this.state.equation.includes(\"=\")) {\n          this.setState({\n            display: e.currentTarget.value,\n            equation: e.currentTarget.value\n          });\n        }\n      }\n    \n      operInput=(e)=>{\n        if(this.state.equation.includes(\"=\")){\n          let val = this.state.display;\n          val += e.currentTarget.value;\n          this.setState({\n            equation: val\n          });\n        } else {\n          if(this.state.equation != \"\" && this.state.equation.match(/[*\\-\\/+]$/) == null){\n            let val = this.state.equation;\n            val += e.currentTarget.value;\n            this.setState({\n              equation: val\n            });\n          } else if(this.state.equation.match(/[*\\-\\/+]$/) != null){\n            let val = this.state.equation;\n            val = val.substring(0, (val.length-1));\n            val += e.currentTarget.value;\n            this.setState({\n              equation: val\n            });\n          }\n        }\n      }\n    \n      decInput=(e)=>{\n        if(this.state.equation == \"\" || this.state.equation.includes(\"=\")){\n          let val = '0.';\n          this.setState({\n            display: val,\n            equation: val\n          });\n        } else if(this.state.equation.match(/[+\\-*\\/]$/)){\n          let val = '0.';\n          this.setState({\n            display: val,\n            equation: this.state.equation + val\n          });\n        } else if(!this.state.display.includes(\".\")){\n          this.setState({\n            display: this.state.display + e.currentTarget.value,\n            equation: this.state.equation + e.currentTarget.value\n          });\n        }\n      }\n    \n      clear=()=>{\n        this.setState({\n          display: \"0\",\n          equation: \"\"\n        });\n      }\n\n// onButtonPress = event => {\n//     let equation = this.state.equation;\n//     const pressedButton = event.target.value;\n//    if ((pressedButton >= '0' && pressedButton <= '9') || pressedButton === '.') equation += pressedButton;\n//     else if (['+', '-', '*', '/', '%','+/-'].indexOf(pressedButton) !== -1) equation += ' ' + pressedButton + ' ';\n//     else if (pressedButton === '=') {\n//       try {\n//         const evalResult = eval(equation);\n//         const result = Number.isInteger(evalResult)? evalResult : evalResult.toFixed(2);\n//         this.setState({result});\n//       } catch (error) {\n//       }\n//     }\n//     else {\n//       equation = equation.trim();\n//       equation = equation.substr(0, equation.length - 1);\n//       equation=equation.parseFloat()\n//     }       \n//     this.setState({equation: equation});\n//   }\n\n//   clear=()=> {\n//     this.setState({equation: '', result: 0});\n//   }\n\n  convertToIndianFormat = (number) => {\n    number = Number(number)\n    if (number) {\n        number = number.toString();\n        var lastThree = number.substring(number.length - 3);\n        var otherNumbers = number.substring(0, number.length - 3);\n        if (otherNumbers !== '')\n            lastThree = ',' + lastThree;\n        var res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThree;\n        return res;\n    }\n    else {\n        return number;\n    }\n}\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"calculator\">\n                <div className=\"operatevalues\"> {this.state.equation}</div>\n               <div className=\"resultscreens\">{this.convertToIndianFormat(this.state.display)}</div>\n               <div className=\"buttongroup\">\n                    <button className=\"button\" value='C' onClick={()=>this.clear()}>C</button>\n                    <button className=\"button\" value='+/-' onClick={()=>this.operInput()}>+/-</button>\n                    <button className=\"button\"  value='%' onClick={()=>this.operInput()}>%</button>\n                    <button className=\"button operators\" value='/' onClick={()=>this.operInput()}>÷</button>\n                    <button className=\"button\" value='7' onClick={()=>this.numInput()}>7</button>\n                    <button className=\"button\" value='8' onClick={()=>this.numInput()}>8</button>\n                    <button className=\"button\"  value='9' onClick={()=>this.numInput()}>9</button>\n                    <button className=\"button operators\"  value='*' onClick={()=>this.operInput()}>×</button>\n                    <button className=\"button\"  value='4' onClick={()=>this.numInput()}>4</button>\n                    <button className=\"button\" value='5' onClick={()=>this.numInput()}>5</button>\n                    <button className=\"button\" value='6' onClick={()=>this.numInput()}>6</button>\n                    <button className=\"button operators\" value='-'  onClick={()=>this.operInput()}>-</button>\n                    <button className=\"button\" value='1' onClick={()=>this.numInput()}>1</button>\n                    <button className=\"button\" value=\"2\" onClick={()=>this.numInput()}>2</button>\n                    <button className=\"button\" value='3' onClick={()=>this.numInput()}>3</button>\n                    <button className=\"button operators\" value='+' onClick={()=>this.operInput()}>+</button>\n                    <button className=\"button\" value='0' onClick={()=>this.numInput()}>0</button>\n                    <button className=\"button\" value='.' onClick={()=>this.decInput()}>.</button>\n                    <button className=\"button equalicon\" value='=' onClick={()=>this.calculate()}>=</button>\n                </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}